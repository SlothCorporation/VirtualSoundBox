#====================================================
# enums
#====================================================
enum ArticleType {
    article
    external
}

#====================================================
# types
#====================================================

type Category {
    id: ID!
    name: String!
    slug: String!
}

type Tag {
    id: ID!
    name: String!
    slug: String!
}

type Article {
    id: ID!
    title: String!
    type: ArticleType!
    body: String
    excerpt: String
    externalUrl: String
    externalDescription: String
    category: Category!
    tags: [Tag]
    coverImage: String
    thumbnailImage: String
    publishedAt: String!
}

type ArticlePaginator {
    data: [Article!]!
    paginatorInfo: PaginatorInfo!
}

type PaginatorInfo {
    count: Int!
    currentPage: Int!
    firstItem: Int
    hasMorePages: Boolean!
    lastItem: Int
    lastPage: Int!
    perPage: Int!
    total: Int!
}

type ContactResponse {
    success: Boolean!
    message: String
}

#====================================================
# input types
#====================================================
input ArticleFilterInput {
    tag: String
    category: String
    keyword: String
}

input ContactInput {
    name: String!
    email: String!
    message: String!
}

#====================================================
# queries
#====================================================
type Query {
    Articles(filter: ArticleFilterInput, page: Int, perPage: Int): ArticlePaginator! @field(resolver: "App\\GraphQL\\Queries\\ArticleQuery@paginatedArticles")
    Article(id: ID!): Article! @field(resolver: "App\\GraphQL\\Queries\\ArticleQuery@article")
}

#====================================================
# mutations
#====================================================
type Mutation {
    contact(input: ContactInput!): ContactResponse! @field(resolver: "App\\GraphQL\\Mutations\\ContactResolver")
}
